{"version":3,"sources":["appointmentRoutes.js"],"names":["Appointment","require","User","express","router","Router","bookAppointment","authMiddleware","post","module","exports","req","res","body","doctorId","date","patientId","user","id","status","json","message","findById","doctor","role","appointment","Date","save","error"],"mappings":";;AAAA,IAAMA,WAAW,GAAGC,OAAO,CAAC,uBAAD,CAA3B;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,gBAAD,CAApB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMG,MAAM,GAAGD,OAAO,CAACE,MAAR,EAAf;;eAC4BJ,OAAO,CAAC,sCAAD,C;IAA3BK,e,YAAAA,e;;AACR,IAAMC,cAAc,GAAGN,OAAO,CAAC,8BAAD,CAA9B;;AAEAG,MAAM,CAACI,IAAP,CAAY,GAAZ,EAAiBD,cAAjB,EAAiCD,eAAjC,E,CAAmD;;AAEnDG,MAAM,CAACC,OAAP,GAAiBN,MAAjB;;AAGAM,OAAO,CAACJ,eAAR,GAA0B,iBAAOK,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBACGD,GAAG,CAACE,IADP,EAChBC,QADgB,aAChBA,QADgB,EACNC,IADM,aACNA,IADM;AAElBC,UAAAA,SAFkB,GAENL,GAAG,CAACM,IAAJ,CAASC,EAFH;;AAAA,gBAIpB,CAACJ,QAAD,IAAa,CAACC,IAJM;AAAA;AAAA;AAAA;;AAAA,2CAKfH,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAArB,CALe;;AAAA;AAAA;AAAA;AAAA,0CASDnB,IAAI,CAACoB,QAAL,CAAcR,QAAd,CATC;;AAAA;AAShBS,UAAAA,MATgB;;AAAA,gBAUlB,CAACA,MAAD,IAAWA,MAAM,CAACC,IAAP,KAAgB,QAVT;AAAA;AAAA;AAAA;;AAAA,2CAWbZ,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAArB,CAXa;;AAAA;AAchBI,UAAAA,WAdgB,GAcF,IAAIzB,WAAJ,CAAgB;AAClCgB,YAAAA,SAAS,EAATA,SADkC;AAElCF,YAAAA,QAAQ,EAARA,QAFkC;AAGlCC,YAAAA,IAAI,EAAE,IAAIW,IAAJ,CAASX,IAAT;AAH4B,WAAhB,CAdE;AAAA;AAAA,0CAoBhBU,WAAW,CAACE,IAAZ,EApBgB;;AAAA;AAqBtBf,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,OAAO,EAAE,iCAAX;AAA8CI,YAAAA,WAAW,EAAXA;AAA9C,WAArB;AArBsB;AAAA;;AAAA;AAAA;AAAA;AAuBtBb,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,OAAO,EAAE,cAAX;AAA2BO,YAAAA,KAAK,EAAE,YAAIP;AAAtC,WAArB;;AAvBsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B","sourcesContent":["const Appointment = require('../models/appointment');\r\nconst User = require('../models/user');\r\nconst express = require('express');\r\nconst router = express.Router();\r\nconst { bookAppointment } = require('../controllers/appointmentController');\r\nconst authMiddleware = require('../middleware/authMiddleware');\r\n\r\nrouter.post('/', authMiddleware, bookAppointment); // Book appointment\r\n\r\nmodule.exports = router;\r\n\r\n\r\nexports.bookAppointment = async (req, res) => {\r\n  const { doctorId, date } = req.body;\r\n  const patientId = req.user.id;\r\n\r\n  if (!doctorId || !date) {\r\n    return res.status(400).json({ message: 'Doctor ID and date are required' });\r\n  }\r\n\r\n  try {\r\n    const doctor = await User.findById(doctorId);\r\n    if (!doctor || doctor.role !== 'doctor') {\r\n      return res.status(404).json({ message: 'Doctor not found' });\r\n    }\r\n\r\n    const appointment = new Appointment({\r\n      patientId,\r\n      doctorId,\r\n      date: new Date(date),\r\n    });\r\n\r\n    await appointment.save();\r\n    res.status(201).json({ message: 'Appointment booked successfully', appointment });\r\n  } catch (err) {\r\n    res.status(500).json({ message: 'Server error', error: err.message });\r\n  }\r\n};\r\n"],"file":"appointmentRoutes.dev.js"}